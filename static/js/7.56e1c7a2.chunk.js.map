{"version":3,"sources":["views/Login.js"],"names":["Login","props","state","loading","this","setState","setTimeout","history","push","className","md","name","type","placeholder","autoComplete","xs","class","onClick","login","role","aria-hidden","style","width","to","color","active","tabIndex","Component"],"mappings":"sQAkBMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAS,GAHE,E,oDAOV,IAAD,OACJC,KAAKC,SAAS,CACVF,SAAS,IAEFG,YAAW,WAClB,EAAKL,MAAMM,QAAQC,KAAK,cACzB,O,+BAEG,IAAD,OACL,OACI,yBAAKC,UAAU,sDACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,UAAU,0BACZ,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,UAAU,OACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,qCACA,uBAAGA,UAAU,cAAb,2BACA,kBAAC,IAAD,CAAaA,UAAU,QACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,KAAK,eAGpB,kBAAC,IAAD,CAAQC,KAAK,OAAOC,YAAY,WAAWC,aAAa,cAE5D,kBAAC,IAAD,CAAaL,UAAU,QACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,KAAK,sBAGpB,kBAAC,IAAD,CAAQC,KAAK,WAAWC,YAAY,WAAWC,aAAa,sBAEhE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,MACkB,GAAtBX,KAAKF,MAAMC,QACP,kBAAC,IAAD,CAASa,MAAM,kBAAkBC,QAAS,WAAQ,EAAKC,UACpD,0BAAMC,KAAK,SAASC,cAAY,QAAhC,YAED,kBAAC,IAAD,CAASJ,MAAM,kBAAkBJ,KAAK,UACrC,0BAAMI,MAAM,+BAA+BG,KAAK,SAASC,cAAY,SACrE,wDAQ5B,kBAAC,IAAD,CAAOX,UAAU,4CAA4CY,MAAO,CAAEC,MAAO,QACzE,kBAAC,IAAD,CAAWb,UAAU,eACjB,6BACI,uCACA,+EACA,kBAAC,IAAD,CAAMc,GAAG,aACL,kBAAC,IAAD,CAASC,MAAM,UAAUf,UAAU,OAAOgB,QAAM,EAACC,UAAW,GAA5D,8B,GAlE5BC,aAgFL3B","file":"static/js/7.56e1c7a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardGroup,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    login() {\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n        var temp = setTimeout(() => {\r\n            this.props.history.push('/predict');\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n                <CContainer>\r\n                    <CRow className=\"justify-content-center\">\r\n                        <CCol md=\"8\">\r\n                            <CCardGroup>\r\n                                <CCard className=\"p-4\">\r\n                                    <CCardBody>\r\n                                        <CForm>\r\n                                            <h1>Login</h1>\r\n                                            <p className=\"text-muted\">Sign In to your account</p>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CInputGroupPrepend>\r\n                                                    <CInputGroupText>\r\n                                                        <CIcon name=\"cil-user\" />\r\n                                                    </CInputGroupText>\r\n                                                </CInputGroupPrepend>\r\n                                                <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" />\r\n                                            </CInputGroup>\r\n                                            <CInputGroup className=\"mb-4\">\r\n                                                <CInputGroupPrepend>\r\n                                                    <CInputGroupText>\r\n                                                        <CIcon name=\"cil-lock-locked\" />\r\n                                                    </CInputGroupText>\r\n                                                </CInputGroupPrepend>\r\n                                                <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" />\r\n                                            </CInputGroup>\r\n                                            <CRow>\r\n                                                <CCol xs=\"12\">\r\n                                                    {this.state.loading == false ?\r\n                                                        (<CButton class=\"btn btn-primary\" onClick={() => { this.login() }}>\r\n                                                            <span role=\"status\" aria-hidden=\"true\"> Login </span>\r\n                                                        </CButton>)\r\n                                                        : (<CButton class=\"btn btn-primary\" type=\"button\" >\r\n                                                            <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                            <span> &nbsp; Logging in</span>\r\n                                                        </CButton>)\r\n                                                    }\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CForm>\r\n                                    </CCardBody>\r\n                                </CCard>\r\n                                <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                                    <CCardBody className=\"text-center\">\r\n                                        <div>\r\n                                            <h2>Sign up</h2>\r\n                                            <p>Welcome to Trends and demand prediction website!</p>\r\n                                            <Link to=\"/register\">\r\n                                                <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </CCardBody>\r\n                                </CCard>\r\n                            </CCardGroup>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}