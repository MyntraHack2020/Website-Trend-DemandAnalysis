{"version":3,"sources":["../node_modules/@coreui/utils/dist/coreui-utils.common.js","charts/chart1.js","charts/chart2.js","charts/chart3.js","charts/chart4.js","charts/chart5.js","charts/chart6.js","users/UsersData.js","charts/chart7.js","charts/chart8.js","views/dashboard/Demand.js"],"names":["e","t","n","exports","r","o","i","l","call","m","c","d","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","u","a","f","g","keys","length","assign","document","styleSheets","cssRules","selectorText","cssText","substring","lastIndexOf","split","forEach","concat","trim","Boolean","documentMode","match","arguments","body","window","getComputedStyle","getPropertyValue","replace","TypeError","Error","parseInt","slice","Math","random","toString","substr","includes","b","deepObjectsMerge","getColor","getStyle","hexToRgb","hexToRgba","makeUid","omitByKeys","pickByKeys","rgbToHex","brandInfo","Chart1","attributes","defaultDatasets","min","max","data1","push","floor","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","data","defaultOptions","maintainAspectRatio","legend","display","title","text","fontSize","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","stepSize","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","datasets","options","labels","brandSuccess","Chart2","brandDanger","Chart3","Chart4","Chart5","Chart6","usersData","StoreId","ArticleId","Demand1","Demand2","Demand3","Ideal","Chart7","data2","data3","Number","NaN","maxTicksLimit","ceil","Chart8","fields","Demand","props","state","country","modal","id","className","this","date","sm","style","height","items","hover","striped","itemsPerPage","pagination","scopedSlots","item","Component"],"mappings":"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","file":"static/js/5.68e2ff18.chunk.js","sourcesContent":["!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";n.r(t),n.d(t,\"deepObjectsMerge\",(function(){return r})),n.d(t,\"getColor\",(function(){return u})),n.d(t,\"getStyle\",(function(){return a})),n.d(t,\"hexToRgb\",(function(){return s})),n.d(t,\"hexToRgba\",(function(){return l})),n.d(t,\"makeUid\",(function(){return f})),n.d(t,\"omitByKeys\",(function(){return d})),n.d(t,\"pickByKeys\",(function(){return p})),n.d(t,\"rgbToHex\",(function(){return g}));var r=function e(t,n){for(var r=0,o=Object.keys(n);r<o.length;r++){var c=o[r];n[c]instanceof Object&&Object.assign(n[c],e(t[c],n[c]))}return Object.assign(t||{},n),t},o=function(){for(var e={},t=document.styleSheets,n=\"\",r=t.length-1;r>-1;r--){for(var o=t[r].cssRules,c=o.length-1;c>-1;c--)if(\".ie-custom-properties\"===o[c].selectorText){n=o[c].cssText;break}if(n)break}return(n=n.substring(n.lastIndexOf(\"{\")+1,n.lastIndexOf(\"}\"))).split(\";\").forEach((function(t){if(t){var n=t.split(\": \")[0],r=t.split(\": \")[1];n&&r&&(e[\"--\".concat(n.trim())]=r.trim())}})),e},c=function(){return Boolean(document.documentMode)&&document.documentMode>=10},i=function(e){return e.match(/^--.*/i)},a=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document.body;if(i(e)&&c()){var r=o();t=r[e]}else t=window.getComputedStyle(n,null).getPropertyValue(e).replace(/^\\s/,\"\");return t},u=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document.body,n=\"--\".concat(e),r=a(n,t);return r||e},s=function(e){if(void 0===e)throw new TypeError(\"Hex color is not defined\");var t,n,r;if(!e.match(/^#(?:[0-9a-f]{3}){1,2}$/i))throw new Error(\"\".concat(e,\" is not a valid hex color\"));return 7===e.length?(t=parseInt(e.slice(1,3),16),n=parseInt(e.slice(3,5),16),r=parseInt(e.slice(5,7),16)):(t=parseInt(e.slice(1,2),16),n=parseInt(e.slice(2,3),16),r=parseInt(e.slice(3,5),16)),\"rgba(\".concat(t,\", \").concat(n,\", \").concat(r,\")\")},l=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100;if(void 0===e)throw new TypeError(\"Hex color is not defined\");var n,r,o,c=e.match(/^#(?:[0-9a-f]{3}){1,2}$/i);if(!c)throw new Error(\"\".concat(e,\" is not a valid hex color\"));return 7===e.length?(n=parseInt(e.slice(1,3),16),r=parseInt(e.slice(3,5),16),o=parseInt(e.slice(5,7),16)):(n=parseInt(e.slice(1,2),16),r=parseInt(e.slice(2,3),16),o=parseInt(e.slice(3,5),16)),\"rgba(\".concat(n,\", \").concat(r,\", \").concat(o,\", \").concat(t/100,\")\")},f=function(){return\"uid-\"+Math.random().toString(36).substr(2)},d=function(e,t){for(var n={},r=Object.keys(e),o=0;o<r.length;o++)!t.includes(r[o])&&(n[r[o]]=e[r[o]]);return n},p=function(e,t){for(var n={},r=0;r<t.length;r++)n[t[r]]=e[t[r]];return n},g=function(e){if(void 0===e)throw new TypeError(\"Hex color is not defined\");if(\"transparent\"===e)return\"#00000000\";var t=e.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);if(!t)throw new Error(\"\".concat(e,\" is not a valid rgb color\"));var n=\"0\".concat(parseInt(t[1],10).toString(16)),r=\"0\".concat(parseInt(t[2],10).toString(16)),o=\"0\".concat(parseInt(t[3],10).toString(16));return\"#\".concat(n.slice(-2)).concat(r.slice(-2)).concat(o.slice(-2))},b={deepObjectsMerge:r,getColor:u,getStyle:a,hexToRgb:s,hexToRgba:l,makeUid:f,omitByKeys:d,pickByKeys:p,rgbToHex:g};t.default=b}]));","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart1 = attributes => {\r\n    const random = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const defaultDatasets = (() => {\r\n        let elements = 21\r\n        const data1 = []\r\n        for (let i = 0; i <= elements; i++) {\r\n            data1.push(random(0, 1000) / 1000)\r\n        }\r\n        return [\r\n            {\r\n                label: 'Normalized Sales',\r\n                backgroundColor: hexToRgba(brandInfo, 10),\r\n                borderColor: brandInfo,\r\n                pointHoverBackgroundColor: brandInfo,\r\n                borderWidth: 2,\r\n                data: data1\r\n            }\r\n        ]\r\n    })()\r\n\r\n    const defaultOptions = (() => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Male Dresses: Color',\r\n                fontSize: '14'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        drawOnChartArea: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 0.2,\r\n                        max: 1\r\n                    },\r\n                    gridLines: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 3\r\n                }\r\n            }\r\n        }\r\n    }\r\n    )()\r\n\r\n    // render\r\n    return (\r\n        <CChartLine\r\n            {...attributes}\r\n            datasets={defaultDatasets}\r\n            options={defaultOptions}\r\n            labels={['Black', 'Blue', 'Chocolate', 'DarkMagenta', 'Firebrick', 'Gold', 'Gray', 'Green', 'Grey', 'Indigo', 'Khaki', 'Lime', 'Multi', 'Navy', 'Orange', 'Pink', 'Purple', 'Red', 'Silver', 'White', 'Yellow']}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default Chart1\r\n\r\n","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart2 = attributes => {\r\n    const random = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const defaultDatasets = (() => {\r\n        let elements = 21\r\n        const data1 = []\r\n        for (let i = 0; i <= elements; i++) {\r\n            data1.push(random(0, 1000) / 1000)\r\n        }\r\n        return [\r\n            {\r\n                label: 'Normalized Sales',\r\n                backgroundColor: hexToRgba(brandSuccess, 10),\r\n                borderColor: brandSuccess,\r\n                pointHoverBackgroundColor: brandSuccess,\r\n                borderWidth: 2,\r\n                data: data1\r\n            }\r\n        ]\r\n    })()\r\n\r\n    const defaultOptions = (() => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Male Dresses: Sleeve Length',\r\n                fontSize: '14'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        drawOnChartArea: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 0.2,\r\n                        max: 1\r\n                    },\r\n                    gridLines: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 3\r\n                }\r\n            }\r\n        }\r\n    }\r\n    )()\r\n\r\n    // render\r\n    return (\r\n        <CChartLine\r\n            {...attributes}\r\n            datasets={defaultDatasets}\r\n            options={defaultOptions}\r\n            labels={['Starp', 'Caps Sleeve', 'Half Sleeve', 'Long Sleeve', 'Short Sleeve', 'Sleaveless', '3 Quater Sleeve']}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default Chart2\r\n\r\n","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart3 = attributes => {\r\n    const random = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const defaultDatasets = (() => {\r\n        let elements = 5\r\n        const data1 = []\r\n        for (let i = 0; i <= elements; i++) {\r\n            data1.push(random(0, 1000) / 1000)\r\n        }\r\n        return [\r\n            {\r\n                label: 'Normalized Sales',\r\n                backgroundColor: hexToRgba(brandDanger, 10),\r\n                borderColor: brandDanger,\r\n                pointHoverBackgroundColor: brandDanger,\r\n                borderWidth: 2,\r\n                data: data1\r\n            }\r\n        ]\r\n    })()\r\n\r\n    const defaultOptions = (() => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Male Dresses: Selling Price',\r\n                fontSize: '14'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        drawOnChartArea: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 0.2,\r\n                        max: 1\r\n                    },\r\n                    gridLines: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 3\r\n                }\r\n            }\r\n        }\r\n    }\r\n    )()\r\n\r\n    // render\r\n    return (\r\n        <CChartLine\r\n            {...attributes}\r\n            datasets={defaultDatasets}\r\n            options={defaultOptions}\r\n            labels={[0, 1, 2, 3, 4]}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default Chart3\r\n\r\n","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart4 = attributes => {\r\n    const random = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const defaultDatasets = (() => {\r\n        let elements = 21\r\n        const data1 = []\r\n        for (let i = 0; i <= elements; i++) {\r\n            data1.push(random(0, 1000) / 1000)\r\n        }\r\n        return [\r\n            {\r\n                label: 'Normalized Sales',\r\n                backgroundColor: hexToRgba(brandInfo, 10),\r\n                borderColor: brandInfo,\r\n                pointHoverBackgroundColor: brandInfo,\r\n                borderWidth: 2,\r\n                data: data1\r\n            }\r\n        ]\r\n    })()\r\n\r\n    const defaultOptions = (() => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Female Dresses: Color',\r\n                fontSize: '14'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        drawOnChartArea: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 0.2,\r\n                        max: 1\r\n                    },\r\n                    gridLines: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 3\r\n                }\r\n            }\r\n        }\r\n    }\r\n    )()\r\n\r\n    // render\r\n    return (\r\n        <CChartLine\r\n            {...attributes}\r\n            datasets={defaultDatasets}\r\n            options={defaultOptions}\r\n            labels={['Black', 'Blue', 'Chocolate', 'DarkMagenta', 'Firebrick', 'Gold', 'Gray', 'Green', 'Grey', 'Indigo', 'Khaki', 'Lime', 'Multi', 'Navy', 'Orange', 'Pink', 'Purple', 'Red', 'Silver', 'White', 'Yellow']}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default Chart4\r\n\r\n","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart5 = attributes => {\r\n    const random = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const defaultDatasets = (() => {\r\n        let elements = 21\r\n        const data1 = []\r\n        for (let i = 0; i <= elements; i++) {\r\n            data1.push(random(0, 1000) / 1000)\r\n        }\r\n        return [\r\n            {\r\n                label: 'Normalized Sales',\r\n                backgroundColor: hexToRgba(brandSuccess, 10),\r\n                borderColor: brandSuccess,\r\n                pointHoverBackgroundColor: brandSuccess,\r\n                borderWidth: 2,\r\n                data: data1\r\n            }\r\n        ]\r\n    })()\r\n\r\n    const defaultOptions = (() => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Female Dresses: Sleeve Length',\r\n                fontSize: '14'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        drawOnChartArea: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 0.2,\r\n                        max: 1\r\n                    },\r\n                    gridLines: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 3\r\n                }\r\n            }\r\n        }\r\n    }\r\n    )()\r\n\r\n    // render\r\n    return (\r\n        <CChartLine\r\n            {...attributes}\r\n            datasets={defaultDatasets}\r\n            options={defaultOptions}\r\n            labels={['Starp', 'Caps Sleeve', 'Half Sleeve', 'Long Sleeve', 'Short Sleeve', 'Sleaveless', '3 Quater Sleeve']}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default Chart5\r\n\r\n","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart6 = attributes => {\r\n    const random = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const defaultDatasets = (() => {\r\n        let elements = 5\r\n        const data1 = []\r\n        for (let i = 0; i <= elements; i++) {\r\n            data1.push(random(0, 1000) / 1000)\r\n        }\r\n        return [\r\n            {\r\n                label: 'Normalized Sales',\r\n                backgroundColor: hexToRgba(brandDanger, 10),\r\n                borderColor: brandDanger,\r\n                pointHoverBackgroundColor: brandDanger,\r\n                borderWidth: 2,\r\n                data: data1\r\n            }\r\n        ]\r\n    })()\r\n\r\n    const defaultOptions = (() => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Female Dresses: Selling Price',\r\n                fontSize: '14'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        drawOnChartArea: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 0.2,\r\n                        max: 1\r\n                    },\r\n                    gridLines: {\r\n                        display: true\r\n                    }\r\n                }]\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 3\r\n                }\r\n            }\r\n        }\r\n    }\r\n    )()\r\n\r\n    // render\r\n    return (\r\n        <CChartLine\r\n            {...attributes}\r\n            datasets={defaultDatasets}\r\n            options={defaultOptions}\r\n            labels={[0, 1, 2, 3, 4]}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default Chart6\r\n\r\n","const usersData = [\r\n    { StoreId: 1111, ArticleId: 206021, Demand1: 25, Demand2: 19, Demand3: 17, Ideal: 1 },\r\n    { StoreId: 1111, ArticleId: 206049, Demand1: 33, Demand2: 25, Demand3: 13, Ideal: 1 },\r\n    { StoreId: 1122, ArticleId: 206049, Demand1: 26, Demand2: 21, Demand3: 19, Ideal: 1 },\r\n    { StoreId: 1122, ArticleId: 206045, Demand1: 10, Demand2: 8, Demand3: 6, Ideal: 1 },\r\n    { StoreId: 1111, ArticleId: 601755, Demand1: 60, Demand2: 38, Demand3: 40, Ideal: 1 },\r\n    { StoreId: 1111, ArticleId: 601763, Demand1: 28, Demand2: 18, Demand3: 15, Ideal: 1 },\r\n    { StoreId: 1133, ArticleId: 224806, Demand1: 91, Demand2: 104, Demand3: 83, Ideal: 2 },\r\n    { StoreId: 1132, ArticleId: 601238, Demand1: 30, Demand2: 40, Demand3: 25, Ideal: 2 },\r\n    { StoreId: 1111, ArticleId: 601291, Demand1: 40, Demand2: 100, Demand3: 80, Ideal: 2 },\r\n    { StoreId: 1155, ArticleId: 601326, Demand1: 72, Demand2: 99, Demand3: 86, Ideal: 2 },\r\n    { StoreId: 1188, ArticleId: 600913, Demand1: 26, Demand2: 39, Demand3: 19, Ideal: 2 },\r\n    { StoreId: 1122, ArticleId: 601236, Demand1: 21, Demand2: 35, Demand3: 24, Ideal: 2 },\r\n    { StoreId: 1100, ArticleId: 601238, Demand1: 25, Demand2: 38, Demand3: 31, Ideal: 2 },\r\n    { StoreId: 1122, ArticleId: 224811, Demand1: 13, Demand2: 18, Demand3: 11, Ideal: 2 },\r\n    { StoreId: 1144, ArticleId: 224666, Demand1: 24, Demand2: 39, Demand3: 45, Ideal: 3 },\r\n    { StoreId: 1144, ArticleId: 601291, Demand1: 21, Demand2: 18, Demand3: 37, Ideal: 3 },\r\n    { StoreId: 1144, ArticleId: 601292, Demand1: 6, Demand2: 9, Demand3: 10, Ideal: 3 },\r\n    { StoreId: 1166, ArticleId: 224667, Demand1: 3, Demand2: 7, Demand3: 8, Ideal: 3 },\r\n    { StoreId: 1166, ArticleId: 224668, Demand1: 3, Demand2: 7, Demand3: 8, Ideal: 3 },\r\n]\r\n\r\nexport default usersData\r\n\r\n\r\n","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart7 = attributes => {\r\n  const random = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  const defaultDatasets = (() => {\r\n    let elements = 27\r\n    const data1 = []\r\n    const data2 = []\r\n    const data3 = []\r\n    for (let i = 0; i < 9; i++) {\r\n      data1.push(random(50, 200))\r\n      data2.push(Number.NaN)\r\n      data3.push(Number.NaN)\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      data1.push(random(40, 100))\r\n      data2.push(random(50, 150))\r\n      data3.push(Number.NaN)\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      data1.push(random(20, 40))\r\n      data2.push(random(30, 100))\r\n      data3.push(random(100, 200))\r\n    }\r\n    return [\r\n      {\r\n        label: 'My First dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandInfo,\r\n        pointHoverBackgroundColor: brandInfo,\r\n        borderWidth: 2,\r\n        data: data1\r\n      },\r\n      {\r\n        label: 'My Second dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandSuccess,\r\n        pointHoverBackgroundColor: brandSuccess,\r\n        borderWidth: 2,\r\n        data: data2\r\n      },\r\n      {\r\n        label: 'My Third dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandDanger,\r\n        pointHoverBackgroundColor: brandDanger,\r\n        borderWidth: 2,\r\n        data: data3\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (() => {\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Effect of translation from Launch time',\r\n        fontSize: '14'\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          gridLines: {\r\n            drawOnChartArea: false\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          gridLines: {\r\n            display: false\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n            maxTicksLimit: 3,\r\n            stepSize: Math.ceil(250 / 5),\r\n            max: 250\r\n          },\r\n          gridLines: {\r\n            display: true\r\n          }\r\n        }]\r\n      },\r\n      elements: {\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4,\r\n          hoverBorderWidth: 3\r\n        }\r\n      }\r\n    }\r\n  }\r\n  )()\r\n\r\n  // render\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={['Phase1', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'phase2', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'phase 3', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', '']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default Chart7","import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst Chart8 = attributes => {\r\n  const random = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  const defaultDatasets = (() => {\r\n    let elements = 27\r\n    const data1 = []\r\n    const data2 = []\r\n    const data3 = []\r\n    for (let i = 0; i < 9; i++) {\r\n      data1.push(random(50, 200))\r\n      data2.push(random(80, 100))\r\n      data3.push(random(90, 150))\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      data1.push(random(40, 100))\r\n      data2.push(random(50, 90))\r\n      data3.push(random(70, 100))\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      data1.push(random(30, 90))\r\n      data2.push(random(20, 40))\r\n      data3.push(random(10, 50))\r\n    }\r\n    return [\r\n      {\r\n        label: 'My First dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandInfo,\r\n        pointHoverBackgroundColor: brandInfo,\r\n        borderWidth: 2,\r\n        data: data1\r\n      },\r\n      {\r\n        label: 'My Second dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandSuccess,\r\n        pointHoverBackgroundColor: brandSuccess,\r\n        borderWidth: 2,\r\n        data: data2\r\n      },\r\n      {\r\n        label: 'My Third dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandDanger,\r\n        pointHoverBackgroundColor: brandDanger,\r\n        borderWidth: 2,\r\n        data: data3\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (() => {\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Effect of translation from Launch time',\r\n        fontSize: '14'\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          gridLines: {\r\n            drawOnChartArea: false\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          gridLines: {\r\n            display: false\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n            maxTicksLimit: 3,\r\n            stepSize: Math.ceil(250 / 5),\r\n            max: 250\r\n          },\r\n          gridLines: {\r\n            display: true\r\n          }\r\n        }]\r\n      },\r\n      elements: {\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4,\r\n          hoverBorderWidth: 3\r\n        }\r\n      }\r\n    }\r\n  }\r\n  )()\r\n\r\n  // render\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={['', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', '7 weeks', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', '14 weeks', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', '']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default Chart8","import React, { Component } from 'react'\r\nimport {\r\n    CBadge,\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CProgress,\r\n    CRow,\r\n    CCallout,\r\n    CDataTable,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport Chart1 from '../../charts/chart1.js'\r\nimport Chart2 from '../../charts/chart2.js'\r\nimport Chart3 from '../../charts/chart3.js'\r\nimport Chart4 from '../../charts/chart4.js'\r\nimport Chart5 from '../../charts/chart5.js'\r\nimport Chart6 from '../../charts/chart6.js'\r\n\r\nimport usersData from '../../users/UsersData'\r\nimport Chart7 from 'src/charts/chart7.js'\r\nimport Chart8 from 'src/charts/chart8.js'\r\n\r\nconst fields = ['Store Id', 'Article ID', 'Demand for phase 1', 'Demand for phase 2', 'Demand for phase 3', 'Ideal lauch phase']\r\n\r\n\r\nclass Demand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            state: 'Delhi',\r\n            country: 'India',\r\n            modal: false,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <CRow>\r\n                    <CCol>\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <CRow>\r\n                                    <CCol>\r\n                                        <h4 id=\"traffic\" className=\"card-title mb-0\">{this.state.state}, {this.state.country}</h4>\r\n                                        <div className=\"small text-muted\">Late Updated: {this.state.date}</div>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol sm=\"6\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart1 style={{ height: '300px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"6\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart4 style={{ height: '300px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol sm=\"4\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart2 style={{ height: '190px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"2\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart3 style={{ height: '190px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"4\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart5 style={{ height: '190px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"2\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart6 style={{ height: '190px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol sm=\"7\">\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart7 style={{ height: '210px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <Chart8 style={{ height: '210px' }} />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"5\">\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                Ideal Lauch Time\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CDataTable\r\n                                    items={usersData}\r\n                                    fields={fields}\r\n                                    hover\r\n                                    striped\r\n                                    itemsPerPage={6}\r\n                                    pagination\r\n                                    scopedSlots={{\r\n                                        'Store Id':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    {item.StoreId}\r\n                                                </td>\r\n                                            )\r\n                                        , 'Article ID':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    {item.ArticleId}\r\n                                                </td>\r\n                                            )\r\n                                        , 'Demand for phase 1':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    {item.Demand1}\r\n                                                </td>\r\n                                            )\r\n                                        , 'Demand for phase 2':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    {item.Demand2}\r\n                                                </td>\r\n                                            )\r\n                                        , 'Demand for phase 3':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    {item.Demand3}\r\n                                                </td>\r\n                                            )\r\n                                        , 'Ideal lauch phase':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    {item.Ideal}\r\n                                                </td>\r\n                                            )\r\n                                    }}\r\n                                />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Demand\r\n"],"sourceRoot":""}